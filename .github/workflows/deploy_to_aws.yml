# .github/workflows/deploy-aws.yml

name: Deploy to AWS EC2

on:
  workflow_dispatch:
    inputs:
      instance_id:
        description: 'The AWS EC2 Instance ID (e.g., i-0123456789abcdef)'
        required: true
      public_ip:
        description: 'The CURRENT Public IP of the EC2 instance'
        required: true

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure AWS credentials using GitHub Secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      # Terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2


      # Run Terraform (Not necessarily needed with this infrastructure, but included for completeness)
      - name: Terraform Init & Apply
        id: terraform
        working-directory: infra/terraform
        env:
          TF_VAR_instance_id: ${{ github.event.inputs.instance_id }}
          TF_VAR_public_ip: ${{ github.event.inputs.public_ip }}
        run: |
          terraform init
          terraform apply -auto-approve

      # Asnible:
      
      # Overwrite the DOMAIN in the .env file with the public IPv4 address of the AWS EC2 instance
      - name: Update .env file
        run: echo "DOMAIN=${{ github.event.inputs.public_ip }}" > .env

      # Create the SSH private key file for Ansible
      - name: Set up SSH private key for Ansible
        working-directory: infra/ansible
        run: |
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > labsuser.pem
          chmod 400 labsuser.pem
          echo "SSH key file created and permissions set."

      # Update the Ansible inventory file with the public IPv4 address of the AWS EC2 instance
      - name: Update Ansible inventory
        working-directory: infra/ansible
        run: |
          sed -i 's/ansible_host: .*/ansible_host: ${{ github.event.inputs.public_ip }}/' inventory.yml
          echo "Ansible inventory updated with host IP: ${{ github.event.inputs.public_ip }}"

      # Run the Ansible playbook to deploy the application
      - name: Run Ansible Playbook
        working-directory: infra/ansible
        run: >-
          ansible-playbook playbook.yml 
          --extra-vars "ghcr_username=${{ github.actor }} ghcr_token=${{ secrets.GITHUB_TOKEN }}"

      - name: Deployment Complete
        run: |
          echo "Deployment successful!"
          echo "Application should be accessible at: http://${{ github.event.inputs.public_ip }}"